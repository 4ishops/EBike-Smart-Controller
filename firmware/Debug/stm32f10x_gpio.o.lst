   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	GPIO_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	GPIO_DeInit:
  24              	.LFB0:
  25              		.file 1 "../stm32f10x_gpio.c"
   1:../stm32f10x_gpio.c **** /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
   2:../stm32f10x_gpio.c **** * File Name          : stm32f10x_gpio.c
   3:../stm32f10x_gpio.c **** * Author             : MCD Application Team
   4:../stm32f10x_gpio.c **** * Date First Issued  : 09/29/2006
   5:../stm32f10x_gpio.c **** * Description        : This file provides all the GPIO firmware functions.
   6:../stm32f10x_gpio.c **** ********************************************************************************
   7:../stm32f10x_gpio.c **** * History:
   8:../stm32f10x_gpio.c **** * 04/02/2007: V0.2
   9:../stm32f10x_gpio.c **** * 02/05/2007: V0.1
  10:../stm32f10x_gpio.c **** * 09/29/2006: V0.01
  11:../stm32f10x_gpio.c **** ********************************************************************************
  12:../stm32f10x_gpio.c **** * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  13:../stm32f10x_gpio.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  14:../stm32f10x_gpio.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  15:../stm32f10x_gpio.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  16:../stm32f10x_gpio.c **** * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  17:../stm32f10x_gpio.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  18:../stm32f10x_gpio.c **** *******************************************************************************/
  19:../stm32f10x_gpio.c **** 
  20:../stm32f10x_gpio.c **** /* Includes ------------------------------------------------------------------*/
  21:../stm32f10x_gpio.c **** #include "stm32f10x_gpio.h"
  22:../stm32f10x_gpio.c **** #include "stm32f10x_rcc.h"
  23:../stm32f10x_gpio.c **** 
  24:../stm32f10x_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  25:../stm32f10x_gpio.c **** /* Private define ------------------------------------------------------------*/
  26:../stm32f10x_gpio.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  27:../stm32f10x_gpio.c **** #define AFIO_OFFSET                 (AFIO_BASE - PERIPH_BASE)
  28:../stm32f10x_gpio.c **** 
  29:../stm32f10x_gpio.c **** /* --- EVENTCR Register ---*/
  30:../stm32f10x_gpio.c **** /* Alias word address of EVOE bit */
  31:../stm32f10x_gpio.c **** #define EVCR_OFFSET                 (AFIO_OFFSET + 0x00)
  32:../stm32f10x_gpio.c **** #define EVOE_BitNumber              ((u8)0x07)
  33:../stm32f10x_gpio.c **** #define EVCR_EVOE_BB                (PERIPH_BB_BASE + (EVCR_OFFSET * 32) + (EVOE_BitNumber * 4))
  34:../stm32f10x_gpio.c **** 
  35:../stm32f10x_gpio.c **** #define EVCR_PORTPINCONFIG_MASK     ((u16)0xFF80)
  36:../stm32f10x_gpio.c **** #define LSB_MASK                    ((u16)0xFFFF)
  37:../stm32f10x_gpio.c **** #define DBGAFR_POSITION_MASK        ((u32)0x000F0000)
  38:../stm32f10x_gpio.c **** #define DBGAFR_SWJCFG_MASK          ((u32)0xF8FFFFFF)
  39:../stm32f10x_gpio.c **** #define DBGAFR_LOCATION_MASK        ((u32)0x00200000)
  40:../stm32f10x_gpio.c **** #define DBGAFR_NUMBITS_MASK         ((u32)0x00100000)
  41:../stm32f10x_gpio.c **** 
  42:../stm32f10x_gpio.c **** /* Private macro -------------------------------------------------------------*/
  43:../stm32f10x_gpio.c **** /* Private variables ---------------------------------------------------------*/
  44:../stm32f10x_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  45:../stm32f10x_gpio.c **** /* Private functions ---------------------------------------------------------*/
  46:../stm32f10x_gpio.c **** 
  47:../stm32f10x_gpio.c **** /*******************************************************************************
  48:../stm32f10x_gpio.c **** * Function Name  : GPIO_DeInit
  49:../stm32f10x_gpio.c **** * Description    : Deinitializes the GPIOx peripheral registers to their default
  50:../stm32f10x_gpio.c **** *                  reset values.
  51:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
  52:../stm32f10x_gpio.c **** * Output         : None
  53:../stm32f10x_gpio.c **** * Return         : None
  54:../stm32f10x_gpio.c **** *******************************************************************************/
  55:../stm32f10x_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
  56:../stm32f10x_gpio.c **** {
  26              		.loc 1 56 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  57:../stm32f10x_gpio.c ****   switch (*(u32*)&GPIOx)
  42              		.loc 1 57 0
  43 0008 07F10403 		add	r3, r7, #4
  44 000c 1B68     		ldr	r3, [r3, #0]
  45 000e 2D4A     		ldr	r2, .L10
  46 0010 9342     		cmp	r3, r2
  47 0012 2AD0     		beq	.L5
  48 0014 2B4A     		ldr	r2, .L10
  49 0016 9342     		cmp	r3, r2
  50 0018 06D8     		bhi	.L8
  51 001a 2B4A     		ldr	r2, .L10+4
  52 001c 9342     		cmp	r3, r2
  53 001e 0AD0     		beq	.L3
  54 0020 2A4A     		ldr	r2, .L10+8
  55 0022 9342     		cmp	r3, r2
  56 0024 14D0     		beq	.L4
  57 0026 47E0     		b	.L2
  58              	.L8:
  59 0028 294A     		ldr	r2, .L10+12
  60 002a 9342     		cmp	r3, r2
  61 002c 2AD0     		beq	.L6
  62 002e 294A     		ldr	r2, .L10+16
  63 0030 9342     		cmp	r3, r2
  64 0032 34D0     		beq	.L7
  65 0034 40E0     		b	.L2
  66              	.L3:
  58:../stm32f10x_gpio.c ****   {
  59:../stm32f10x_gpio.c ****     case GPIOA_BASE:
  60:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
  67              		.loc 1 60 0
  68 0036 4FF00400 		mov	r0, #4
  69 003a 4FF00101 		mov	r1, #1
  70 003e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  61:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
  71              		.loc 1 61 0
  72 0042 4FF00400 		mov	r0, #4
  73 0046 4FF00001 		mov	r1, #0
  74 004a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  62:../stm32f10x_gpio.c ****       break;
  75              		.loc 1 62 0
  76 004e 34E0     		b	.L1
  77              	.L4:
  63:../stm32f10x_gpio.c **** 
  64:../stm32f10x_gpio.c ****     case GPIOB_BASE:
  65:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
  78              		.loc 1 65 0
  79 0050 4FF00800 		mov	r0, #8
  80 0054 4FF00101 		mov	r1, #1
  81 0058 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  66:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
  82              		.loc 1 66 0
  83 005c 4FF00800 		mov	r0, #8
  84 0060 4FF00001 		mov	r1, #0
  85 0064 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  67:../stm32f10x_gpio.c ****       break;
  86              		.loc 1 67 0
  87 0068 27E0     		b	.L1
  88              	.L5:
  68:../stm32f10x_gpio.c **** 
  69:../stm32f10x_gpio.c ****     case GPIOC_BASE:
  70:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
  89              		.loc 1 70 0
  90 006a 4FF01000 		mov	r0, #16
  91 006e 4FF00101 		mov	r1, #1
  92 0072 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  71:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
  93              		.loc 1 71 0
  94 0076 4FF01000 		mov	r0, #16
  95 007a 4FF00001 		mov	r1, #0
  96 007e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  72:../stm32f10x_gpio.c ****       break;
  97              		.loc 1 72 0
  98 0082 1AE0     		b	.L1
  99              	.L6:
  73:../stm32f10x_gpio.c **** 
  74:../stm32f10x_gpio.c ****     case GPIOD_BASE:
  75:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
 100              		.loc 1 75 0
 101 0084 4FF02000 		mov	r0, #32
 102 0088 4FF00101 		mov	r1, #1
 103 008c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  76:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
 104              		.loc 1 76 0
 105 0090 4FF02000 		mov	r0, #32
 106 0094 4FF00001 		mov	r1, #0
 107 0098 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  77:../stm32f10x_gpio.c ****       break;
 108              		.loc 1 77 0
 109 009c 0DE0     		b	.L1
 110              	.L7:
  78:../stm32f10x_gpio.c ****       
  79:../stm32f10x_gpio.c ****     case GPIOE_BASE:
  80:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
 111              		.loc 1 80 0
 112 009e 4FF04000 		mov	r0, #64
 113 00a2 4FF00101 		mov	r1, #1
 114 00a6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  81:../stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
 115              		.loc 1 81 0
 116 00aa 4FF04000 		mov	r0, #64
 117 00ae 4FF00001 		mov	r1, #0
 118 00b2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  82:../stm32f10x_gpio.c ****       break;            
 119              		.loc 1 82 0
 120 00b6 00E0     		b	.L1
 121              	.L2:
  83:../stm32f10x_gpio.c **** 
  84:../stm32f10x_gpio.c ****     default:
  85:../stm32f10x_gpio.c ****       break;
 122              		.loc 1 85 0
 123 00b8 00BF     		nop
 124              	.L1:
  86:../stm32f10x_gpio.c ****   }
  87:../stm32f10x_gpio.c **** }
 125              		.loc 1 87 0
 126 00ba 07F10807 		add	r7, r7, #8
 127 00be BD46     		mov	sp, r7
 128 00c0 80BD     		pop	{r7, pc}
 129              	.L11:
 130 00c2 00BF     		.align	2
 131              	.L10:
 132 00c4 00100140 		.word	1073811456
 133 00c8 00080140 		.word	1073809408
 134 00cc 000C0140 		.word	1073810432
 135 00d0 00140140 		.word	1073812480
 136 00d4 00180140 		.word	1073813504
 137              		.cfi_endproc
 138              	.LFE0:
 140              		.align	2
 141              		.global	GPIO_AFIODeInit
 142              		.thumb
 143              		.thumb_func
 145              	GPIO_AFIODeInit:
 146              	.LFB1:
  88:../stm32f10x_gpio.c **** 
  89:../stm32f10x_gpio.c **** /*******************************************************************************
  90:../stm32f10x_gpio.c **** * Function Name  : GPIO_AFIODeInit
  91:../stm32f10x_gpio.c **** * Description    : Deinitializes the Alternate Functions (remap, event control
  92:../stm32f10x_gpio.c **** *                  and EXTI configuration) registers to their default reset
  93:../stm32f10x_gpio.c **** *                  values.
  94:../stm32f10x_gpio.c **** * Input          : None
  95:../stm32f10x_gpio.c **** * Output         : None
  96:../stm32f10x_gpio.c **** * Return         : None
  97:../stm32f10x_gpio.c **** *******************************************************************************/
  98:../stm32f10x_gpio.c **** void GPIO_AFIODeInit(void)
  99:../stm32f10x_gpio.c **** {
 147              		.loc 1 99 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151 00d8 80B5     		push	{r7, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 00da 00AF     		add	r7, sp, #0
 157              	.LCFI4:
 158              		.cfi_def_cfa_register 7
 100:../stm32f10x_gpio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
 159              		.loc 1 100 0
 160 00dc 4FF00100 		mov	r0, #1
 161 00e0 4FF00101 		mov	r1, #1
 162 00e4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 101:../stm32f10x_gpio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
 163              		.loc 1 101 0
 164 00e8 4FF00100 		mov	r0, #1
 165 00ec 4FF00001 		mov	r1, #0
 166 00f0 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 102:../stm32f10x_gpio.c **** }
 167              		.loc 1 102 0
 168 00f4 80BD     		pop	{r7, pc}
 169              		.cfi_endproc
 170              	.LFE1:
 172 00f6 00BF     		.align	2
 173              		.global	GPIO_Init
 174              		.thumb
 175              		.thumb_func
 177              	GPIO_Init:
 178              	.LFB2:
 103:../stm32f10x_gpio.c **** 
 104:../stm32f10x_gpio.c **** /*******************************************************************************
 105:../stm32f10x_gpio.c **** * Function Name  : GPIO_Init
 106:../stm32f10x_gpio.c **** * Description    : Initializes the GPIOx peripheral according to the specified
 107:../stm32f10x_gpio.c **** *                  parameters in the GPIO_InitStruct.
 108:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 109:../stm32f10x_gpio.c **** *                  - GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
 110:../stm32f10x_gpio.c **** *                    contains the configuration information for the specified GPIO
 111:../stm32f10x_gpio.c **** *                    peripheral.
 112:../stm32f10x_gpio.c **** * Output         : None
 113:../stm32f10x_gpio.c **** * Return         : None
 114:../stm32f10x_gpio.c **** *******************************************************************************/
 115:../stm32f10x_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 116:../stm32f10x_gpio.c **** {
 179              		.loc 1 116 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 32
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 00f8 80B4     		push	{r7}
 185              	.LCFI5:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 00fa 89B0     		sub	sp, sp, #36
 189              	.LCFI6:
 190              		.cfi_def_cfa_offset 40
 191 00fc 00AF     		add	r7, sp, #0
 192              	.LCFI7:
 193              		.cfi_def_cfa_register 7
 194 00fe 7860     		str	r0, [r7, #4]
 195 0100 3960     		str	r1, [r7, #0]
 117:../stm32f10x_gpio.c ****   u32 currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
 196              		.loc 1 117 0
 197 0102 4FF00003 		mov	r3, #0
 198 0106 FB61     		str	r3, [r7, #28]
 199 0108 4FF00003 		mov	r3, #0
 200 010c 3B61     		str	r3, [r7, #16]
 201 010e 4FF00003 		mov	r3, #0
 202 0112 BB61     		str	r3, [r7, #24]
 203 0114 4FF00003 		mov	r3, #0
 204 0118 FB60     		str	r3, [r7, #12]
 118:../stm32f10x_gpio.c ****   u32 tmpreg = 0x00, pinmask = 0x00;
 205              		.loc 1 118 0
 206 011a 4FF00003 		mov	r3, #0
 207 011e 7B61     		str	r3, [r7, #20]
 208 0120 4FF00003 		mov	r3, #0
 209 0124 BB60     		str	r3, [r7, #8]
 119:../stm32f10x_gpio.c **** 
 120:../stm32f10x_gpio.c ****   /* Check the parameters */
 121:../stm32f10x_gpio.c ****   assert(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 122:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 123:../stm32f10x_gpio.c ****   
 124:../stm32f10x_gpio.c **** /*---------------------------- GPIO Mode Configuration -----------------------*/
 125:../stm32f10x_gpio.c ****   currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
 210              		.loc 1 125 0
 211 0126 3B68     		ldr	r3, [r7, #0]
 212 0128 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 213 012a 03F00F03 		and	r3, r3, #15
 214 012e FB61     		str	r3, [r7, #28]
 126:../stm32f10x_gpio.c **** 
 127:../stm32f10x_gpio.c ****   if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
 215              		.loc 1 127 0
 216 0130 3B68     		ldr	r3, [r7, #0]
 217 0132 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 218 0134 03F01003 		and	r3, r3, #16
 219 0138 002B     		cmp	r3, #0
 220 013a 04D0     		beq	.L14
 128:../stm32f10x_gpio.c ****   { 
 129:../stm32f10x_gpio.c ****     /* Check the parameters */
 130:../stm32f10x_gpio.c ****     assert(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 131:../stm32f10x_gpio.c ****     /* Output mode */
 132:../stm32f10x_gpio.c ****     currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
 221              		.loc 1 132 0
 222 013c 3B68     		ldr	r3, [r7, #0]
 223 013e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 224 0140 FA69     		ldr	r2, [r7, #28]
 225 0142 1343     		orrs	r3, r3, r2
 226 0144 FB61     		str	r3, [r7, #28]
 227              	.L14:
 133:../stm32f10x_gpio.c ****   }
 134:../stm32f10x_gpio.c **** 
 135:../stm32f10x_gpio.c **** /*---------------------------- GPIO CRL Configuration ------------------------*/
 136:../stm32f10x_gpio.c ****   /* Configure the eight low port pins */
 137:../stm32f10x_gpio.c ****   if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
 228              		.loc 1 137 0
 229 0146 3B68     		ldr	r3, [r7, #0]
 230 0148 1B88     		ldrh	r3, [r3, #0]
 231 014a DBB2     		uxtb	r3, r3
 232 014c 002B     		cmp	r3, #0
 233 014e 50D0     		beq	.L15
 138:../stm32f10x_gpio.c ****   {
 139:../stm32f10x_gpio.c ****     tmpreg = GPIOx->CRL;
 234              		.loc 1 139 0
 235 0150 7B68     		ldr	r3, [r7, #4]
 236 0152 1B68     		ldr	r3, [r3, #0]
 237 0154 7B61     		str	r3, [r7, #20]
 140:../stm32f10x_gpio.c **** 
 141:../stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 238              		.loc 1 141 0
 239 0156 4FF00003 		mov	r3, #0
 240 015a BB61     		str	r3, [r7, #24]
 241 015c 40E0     		b	.L16
 242              	.L19:
 142:../stm32f10x_gpio.c ****     {
 143:../stm32f10x_gpio.c ****       pos = ((u32)0x01) << pinpos;
 243              		.loc 1 143 0
 244 015e BB69     		ldr	r3, [r7, #24]
 245 0160 4FF00102 		mov	r2, #1
 246 0164 02FA03F3 		lsl	r3, r2, r3
 247 0168 FB60     		str	r3, [r7, #12]
 144:../stm32f10x_gpio.c ****       /* Get the port pins position */
 145:../stm32f10x_gpio.c ****       currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 248              		.loc 1 145 0
 249 016a 3B68     		ldr	r3, [r7, #0]
 250 016c 1B88     		ldrh	r3, [r3, #0]
 251 016e 1A46     		mov	r2, r3
 252 0170 FB68     		ldr	r3, [r7, #12]
 253 0172 1340     		ands	r3, r3, r2
 254 0174 3B61     		str	r3, [r7, #16]
 146:../stm32f10x_gpio.c **** 
 147:../stm32f10x_gpio.c ****       if (currentpin == pos)
 255              		.loc 1 147 0
 256 0176 3A69     		ldr	r2, [r7, #16]
 257 0178 FB68     		ldr	r3, [r7, #12]
 258 017a 9A42     		cmp	r2, r3
 259 017c 2CD1     		bne	.L17
 148:../stm32f10x_gpio.c ****       {
 149:../stm32f10x_gpio.c ****         pos = pinpos << 2;
 260              		.loc 1 149 0
 261 017e BB69     		ldr	r3, [r7, #24]
 262 0180 4FEA8303 		lsl	r3, r3, #2
 263 0184 FB60     		str	r3, [r7, #12]
 150:../stm32f10x_gpio.c ****         /* Clear the corresponding low control register bits */
 151:../stm32f10x_gpio.c ****         pinmask = ((u32)0x0F) << pos;
 264              		.loc 1 151 0
 265 0186 FB68     		ldr	r3, [r7, #12]
 266 0188 4FF00F02 		mov	r2, #15
 267 018c 02FA03F3 		lsl	r3, r2, r3
 268 0190 BB60     		str	r3, [r7, #8]
 152:../stm32f10x_gpio.c ****         tmpreg &= ~pinmask;
 269              		.loc 1 152 0
 270 0192 BB68     		ldr	r3, [r7, #8]
 271 0194 6FEA0303 		mvn	r3, r3
 272 0198 7A69     		ldr	r2, [r7, #20]
 273 019a 1340     		ands	r3, r3, r2
 274 019c 7B61     		str	r3, [r7, #20]
 153:../stm32f10x_gpio.c **** 
 154:../stm32f10x_gpio.c ****         /* Write the mode configuration in the corresponding bits */
 155:../stm32f10x_gpio.c ****         tmpreg |= (currentmode << pos);
 275              		.loc 1 155 0
 276 019e FB68     		ldr	r3, [r7, #12]
 277 01a0 FA69     		ldr	r2, [r7, #28]
 278 01a2 02FA03F3 		lsl	r3, r2, r3
 279 01a6 7A69     		ldr	r2, [r7, #20]
 280 01a8 1343     		orrs	r3, r3, r2
 281 01aa 7B61     		str	r3, [r7, #20]
 156:../stm32f10x_gpio.c **** 
 157:../stm32f10x_gpio.c ****         /* Reset the corresponding ODR bit */
 158:../stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 282              		.loc 1 158 0
 283 01ac 3B68     		ldr	r3, [r7, #0]
 284 01ae DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 285 01b0 282B     		cmp	r3, #40
 286 01b2 06D1     		bne	.L18
 159:../stm32f10x_gpio.c ****         {
 160:../stm32f10x_gpio.c ****           GPIOx->BRR = (((u32)0x01) << pinpos);
 287              		.loc 1 160 0
 288 01b4 BB69     		ldr	r3, [r7, #24]
 289 01b6 4FF00102 		mov	r2, #1
 290 01ba 02FA03F2 		lsl	r2, r2, r3
 291 01be 7B68     		ldr	r3, [r7, #4]
 292 01c0 5A61     		str	r2, [r3, #20]
 293              	.L18:
 161:../stm32f10x_gpio.c ****         }
 162:../stm32f10x_gpio.c ****         /* Set the corresponding ODR bit */
 163:../stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 294              		.loc 1 163 0
 295 01c2 3B68     		ldr	r3, [r7, #0]
 296 01c4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 297 01c6 482B     		cmp	r3, #72
 298 01c8 06D1     		bne	.L17
 164:../stm32f10x_gpio.c ****         {
 165:../stm32f10x_gpio.c ****           GPIOx->BSRR = (((u32)0x01) << pinpos);
 299              		.loc 1 165 0
 300 01ca BB69     		ldr	r3, [r7, #24]
 301 01cc 4FF00102 		mov	r2, #1
 302 01d0 02FA03F2 		lsl	r2, r2, r3
 303 01d4 7B68     		ldr	r3, [r7, #4]
 304 01d6 1A61     		str	r2, [r3, #16]
 305              	.L17:
 141:../stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 306              		.loc 1 141 0
 307 01d8 BB69     		ldr	r3, [r7, #24]
 308 01da 03F10103 		add	r3, r3, #1
 309 01de BB61     		str	r3, [r7, #24]
 310              	.L16:
 141:../stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 311              		.loc 1 141 0 is_stmt 0 discriminator 1
 312 01e0 BB69     		ldr	r3, [r7, #24]
 313 01e2 072B     		cmp	r3, #7
 314 01e4 BBD9     		bls	.L19
 166:../stm32f10x_gpio.c ****         }
 167:../stm32f10x_gpio.c ****       }
 168:../stm32f10x_gpio.c ****     }
 169:../stm32f10x_gpio.c ****     GPIOx->CRL = tmpreg;
 315              		.loc 1 169 0 is_stmt 1
 316 01e6 7B68     		ldr	r3, [r7, #4]
 317 01e8 7A69     		ldr	r2, [r7, #20]
 318 01ea 1A60     		str	r2, [r3, #0]
 170:../stm32f10x_gpio.c ****     tmpreg = 0;
 319              		.loc 1 170 0
 320 01ec 4FF00003 		mov	r3, #0
 321 01f0 7B61     		str	r3, [r7, #20]
 322              	.L15:
 171:../stm32f10x_gpio.c ****   }
 172:../stm32f10x_gpio.c **** 
 173:../stm32f10x_gpio.c **** /*---------------------------- GPIO CRH Configuration ------------------------*/
 174:../stm32f10x_gpio.c ****   /* Configure the eight high port pins */
 175:../stm32f10x_gpio.c ****   if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 323              		.loc 1 175 0
 324 01f2 3B68     		ldr	r3, [r7, #0]
 325 01f4 1B88     		ldrh	r3, [r3, #0]
 326 01f6 FF2B     		cmp	r3, #255
 327 01f8 53D9     		bls	.L13
 176:../stm32f10x_gpio.c ****   {
 177:../stm32f10x_gpio.c ****     tmpreg = GPIOx->CRH;
 328              		.loc 1 177 0
 329 01fa 7B68     		ldr	r3, [r7, #4]
 330 01fc 5B68     		ldr	r3, [r3, #4]
 331 01fe 7B61     		str	r3, [r7, #20]
 178:../stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 332              		.loc 1 178 0
 333 0200 4FF00003 		mov	r3, #0
 334 0204 BB61     		str	r3, [r7, #24]
 335 0206 46E0     		b	.L21
 336              	.L24:
 179:../stm32f10x_gpio.c ****     {
 180:../stm32f10x_gpio.c ****       pos = (((u32)0x01) << (pinpos + 0x08));
 337              		.loc 1 180 0
 338 0208 BB69     		ldr	r3, [r7, #24]
 339 020a 03F10803 		add	r3, r3, #8
 340 020e 4FF00102 		mov	r2, #1
 341 0212 02FA03F3 		lsl	r3, r2, r3
 342 0216 FB60     		str	r3, [r7, #12]
 181:../stm32f10x_gpio.c ****       /* Get the port pins position */
 182:../stm32f10x_gpio.c ****       currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 343              		.loc 1 182 0
 344 0218 3B68     		ldr	r3, [r7, #0]
 345 021a 1B88     		ldrh	r3, [r3, #0]
 346 021c 1A46     		mov	r2, r3
 347 021e FB68     		ldr	r3, [r7, #12]
 348 0220 1340     		ands	r3, r3, r2
 349 0222 3B61     		str	r3, [r7, #16]
 183:../stm32f10x_gpio.c ****       if (currentpin == pos)
 350              		.loc 1 183 0
 351 0224 3A69     		ldr	r2, [r7, #16]
 352 0226 FB68     		ldr	r3, [r7, #12]
 353 0228 9A42     		cmp	r2, r3
 354 022a 30D1     		bne	.L22
 184:../stm32f10x_gpio.c ****       {
 185:../stm32f10x_gpio.c ****         pos = pinpos << 2;
 355              		.loc 1 185 0
 356 022c BB69     		ldr	r3, [r7, #24]
 357 022e 4FEA8303 		lsl	r3, r3, #2
 358 0232 FB60     		str	r3, [r7, #12]
 186:../stm32f10x_gpio.c ****         /* Clear the corresponding high control register bits */
 187:../stm32f10x_gpio.c ****         pinmask = ((u32)0x0F) << pos;
 359              		.loc 1 187 0
 360 0234 FB68     		ldr	r3, [r7, #12]
 361 0236 4FF00F02 		mov	r2, #15
 362 023a 02FA03F3 		lsl	r3, r2, r3
 363 023e BB60     		str	r3, [r7, #8]
 188:../stm32f10x_gpio.c ****         tmpreg &= ~pinmask;
 364              		.loc 1 188 0
 365 0240 BB68     		ldr	r3, [r7, #8]
 366 0242 6FEA0303 		mvn	r3, r3
 367 0246 7A69     		ldr	r2, [r7, #20]
 368 0248 1340     		ands	r3, r3, r2
 369 024a 7B61     		str	r3, [r7, #20]
 189:../stm32f10x_gpio.c **** 
 190:../stm32f10x_gpio.c ****         /* Write the mode configuration in the corresponding bits */
 191:../stm32f10x_gpio.c ****         tmpreg |= (currentmode << pos);
 370              		.loc 1 191 0
 371 024c FB68     		ldr	r3, [r7, #12]
 372 024e FA69     		ldr	r2, [r7, #28]
 373 0250 02FA03F3 		lsl	r3, r2, r3
 374 0254 7A69     		ldr	r2, [r7, #20]
 375 0256 1343     		orrs	r3, r3, r2
 376 0258 7B61     		str	r3, [r7, #20]
 192:../stm32f10x_gpio.c **** 
 193:../stm32f10x_gpio.c ****         /* Reset the corresponding ODR bit */
 194:../stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 377              		.loc 1 194 0
 378 025a 3B68     		ldr	r3, [r7, #0]
 379 025c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 380 025e 282B     		cmp	r3, #40
 381 0260 08D1     		bne	.L23
 195:../stm32f10x_gpio.c ****         {
 196:../stm32f10x_gpio.c ****           GPIOx->BRR = (((u32)0x01) << (pinpos + 0x08));
 382              		.loc 1 196 0
 383 0262 BB69     		ldr	r3, [r7, #24]
 384 0264 03F10803 		add	r3, r3, #8
 385 0268 4FF00102 		mov	r2, #1
 386 026c 02FA03F2 		lsl	r2, r2, r3
 387 0270 7B68     		ldr	r3, [r7, #4]
 388 0272 5A61     		str	r2, [r3, #20]
 389              	.L23:
 197:../stm32f10x_gpio.c ****         }
 198:../stm32f10x_gpio.c ****         /* Set the corresponding ODR bit */
 199:../stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 390              		.loc 1 199 0
 391 0274 3B68     		ldr	r3, [r7, #0]
 392 0276 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 393 0278 482B     		cmp	r3, #72
 394 027a 08D1     		bne	.L22
 200:../stm32f10x_gpio.c ****         {
 201:../stm32f10x_gpio.c ****           GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
 395              		.loc 1 201 0
 396 027c BB69     		ldr	r3, [r7, #24]
 397 027e 03F10803 		add	r3, r3, #8
 398 0282 4FF00102 		mov	r2, #1
 399 0286 02FA03F2 		lsl	r2, r2, r3
 400 028a 7B68     		ldr	r3, [r7, #4]
 401 028c 1A61     		str	r2, [r3, #16]
 402              	.L22:
 178:../stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 403              		.loc 1 178 0
 404 028e BB69     		ldr	r3, [r7, #24]
 405 0290 03F10103 		add	r3, r3, #1
 406 0294 BB61     		str	r3, [r7, #24]
 407              	.L21:
 178:../stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 408              		.loc 1 178 0 is_stmt 0 discriminator 1
 409 0296 BB69     		ldr	r3, [r7, #24]
 410 0298 072B     		cmp	r3, #7
 411 029a B5D9     		bls	.L24
 202:../stm32f10x_gpio.c ****         }
 203:../stm32f10x_gpio.c ****       }
 204:../stm32f10x_gpio.c ****     }
 205:../stm32f10x_gpio.c ****     GPIOx->CRH = tmpreg;
 412              		.loc 1 205 0 is_stmt 1
 413 029c 7B68     		ldr	r3, [r7, #4]
 414 029e 7A69     		ldr	r2, [r7, #20]
 415 02a0 5A60     		str	r2, [r3, #4]
 416              	.L13:
 206:../stm32f10x_gpio.c ****   }
 207:../stm32f10x_gpio.c **** }
 417              		.loc 1 207 0
 418 02a2 07F12407 		add	r7, r7, #36
 419 02a6 BD46     		mov	sp, r7
 420 02a8 80BC     		pop	{r7}
 421 02aa 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE2:
 425              		.align	2
 426              		.global	GPIO_StructInit
 427              		.thumb
 428              		.thumb_func
 430              	GPIO_StructInit:
 431              	.LFB3:
 208:../stm32f10x_gpio.c **** 
 209:../stm32f10x_gpio.c **** /*******************************************************************************
 210:../stm32f10x_gpio.c **** * Function Name  : GPIO_StructInit
 211:../stm32f10x_gpio.c **** * Description    : Fills each GPIO_InitStruct member with its default value.
 212:../stm32f10x_gpio.c **** * Input          : - GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure
 213:../stm32f10x_gpio.c **** *                    which will be initialized.
 214:../stm32f10x_gpio.c **** * Output         : None
 215:../stm32f10x_gpio.c **** * Return         : None
 216:../stm32f10x_gpio.c **** *******************************************************************************/
 217:../stm32f10x_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 218:../stm32f10x_gpio.c **** {
 432              		.loc 1 218 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 02ac 80B4     		push	{r7}
 438              	.LCFI8:
 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 02ae 83B0     		sub	sp, sp, #12
 442              	.LCFI9:
 443              		.cfi_def_cfa_offset 16
 444 02b0 00AF     		add	r7, sp, #0
 445              	.LCFI10:
 446              		.cfi_def_cfa_register 7
 447 02b2 7860     		str	r0, [r7, #4]
 219:../stm32f10x_gpio.c ****   /* Reset GPIO init structure parameters values */
 220:../stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 448              		.loc 1 220 0
 449 02b4 7B68     		ldr	r3, [r7, #4]
 450 02b6 4FF6FF72 		movw	r2, #65535
 451 02ba 1A80     		strh	r2, [r3, #0]	@ movhi
 221:../stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 452              		.loc 1 221 0
 453 02bc 7B68     		ldr	r3, [r7, #4]
 454 02be 4FF00202 		mov	r2, #2
 455 02c2 9A70     		strb	r2, [r3, #2]
 222:../stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
 456              		.loc 1 222 0
 457 02c4 7B68     		ldr	r3, [r7, #4]
 458 02c6 4FF00402 		mov	r2, #4
 459 02ca DA70     		strb	r2, [r3, #3]
 223:../stm32f10x_gpio.c **** }
 460              		.loc 1 223 0
 461 02cc 07F10C07 		add	r7, r7, #12
 462 02d0 BD46     		mov	sp, r7
 463 02d2 80BC     		pop	{r7}
 464 02d4 7047     		bx	lr
 465              		.cfi_endproc
 466              	.LFE3:
 468 02d6 00BF     		.align	2
 469              		.global	GPIO_ReadInputDataBit
 470              		.thumb
 471              		.thumb_func
 473              	GPIO_ReadInputDataBit:
 474              	.LFB4:
 224:../stm32f10x_gpio.c **** 
 225:../stm32f10x_gpio.c **** /*******************************************************************************
 226:../stm32f10x_gpio.c **** * Function Name  : GPIO_ReadInputDataBit
 227:../stm32f10x_gpio.c **** * Description    : Reads the specified input port pin.
 228:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 229:../stm32f10x_gpio.c **** *                : - GPIO_Pin:  specifies the port bit to read.
 230:../stm32f10x_gpio.c **** *                    This parameter can be GPIO_Pin_x where x can be (0..15).
 231:../stm32f10x_gpio.c **** * Output         : None
 232:../stm32f10x_gpio.c **** * Return         : The input port pin value.
 233:../stm32f10x_gpio.c **** *******************************************************************************/
 234:../stm32f10x_gpio.c **** u8 GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 235:../stm32f10x_gpio.c **** {
 475              		.loc 1 235 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 16
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 02d8 80B4     		push	{r7}
 481              	.LCFI11:
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 02da 85B0     		sub	sp, sp, #20
 485              	.LCFI12:
 486              		.cfi_def_cfa_offset 24
 487 02dc 00AF     		add	r7, sp, #0
 488              	.LCFI13:
 489              		.cfi_def_cfa_register 7
 490 02de 7860     		str	r0, [r7, #4]
 491 02e0 0B46     		mov	r3, r1
 492 02e2 7B80     		strh	r3, [r7, #2]	@ movhi
 236:../stm32f10x_gpio.c ****   u8 bitstatus = 0x00;
 493              		.loc 1 236 0
 494 02e4 4FF00003 		mov	r3, #0
 495 02e8 FB73     		strb	r3, [r7, #15]
 237:../stm32f10x_gpio.c ****   
 238:../stm32f10x_gpio.c ****   /* Check the parameters */
 239:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN(GPIO_Pin)); 
 240:../stm32f10x_gpio.c ****   
 241:../stm32f10x_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (u32)Bit_RESET)
 496              		.loc 1 241 0
 497 02ea 7B68     		ldr	r3, [r7, #4]
 498 02ec 9A68     		ldr	r2, [r3, #8]
 499 02ee 7B88     		ldrh	r3, [r7, #2]
 500 02f0 1340     		ands	r3, r3, r2
 501 02f2 002B     		cmp	r3, #0
 502 02f4 03D0     		beq	.L27
 242:../stm32f10x_gpio.c ****   {
 243:../stm32f10x_gpio.c ****     bitstatus = (u8)Bit_SET;
 503              		.loc 1 243 0
 504 02f6 4FF00103 		mov	r3, #1
 505 02fa FB73     		strb	r3, [r7, #15]
 506 02fc 02E0     		b	.L28
 507              	.L27:
 244:../stm32f10x_gpio.c ****   }
 245:../stm32f10x_gpio.c ****   else
 246:../stm32f10x_gpio.c ****   {
 247:../stm32f10x_gpio.c ****     bitstatus = (u8)Bit_RESET;
 508              		.loc 1 247 0
 509 02fe 4FF00003 		mov	r3, #0
 510 0302 FB73     		strb	r3, [r7, #15]
 511              	.L28:
 248:../stm32f10x_gpio.c ****   }
 249:../stm32f10x_gpio.c ****   return bitstatus;
 512              		.loc 1 249 0
 513 0304 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 250:../stm32f10x_gpio.c **** }
 514              		.loc 1 250 0
 515 0306 1846     		mov	r0, r3
 516 0308 07F11407 		add	r7, r7, #20
 517 030c BD46     		mov	sp, r7
 518 030e 80BC     		pop	{r7}
 519 0310 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE4:
 523 0312 00BF     		.align	2
 524              		.global	GPIO_ReadInputData
 525              		.thumb
 526              		.thumb_func
 528              	GPIO_ReadInputData:
 529              	.LFB5:
 251:../stm32f10x_gpio.c **** 
 252:../stm32f10x_gpio.c **** /*******************************************************************************
 253:../stm32f10x_gpio.c **** * Function Name  : GPIO_ReadInputData
 254:../stm32f10x_gpio.c **** * Description    : Reads the specified GPIO input data port.
 255:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 256:../stm32f10x_gpio.c **** * Output         : None
 257:../stm32f10x_gpio.c **** * Return         : GPIO input data port value.
 258:../stm32f10x_gpio.c **** *******************************************************************************/
 259:../stm32f10x_gpio.c **** u16 GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 260:../stm32f10x_gpio.c **** {
 530              		.loc 1 260 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0314 80B4     		push	{r7}
 536              	.LCFI14:
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0316 83B0     		sub	sp, sp, #12
 540              	.LCFI15:
 541              		.cfi_def_cfa_offset 16
 542 0318 00AF     		add	r7, sp, #0
 543              	.LCFI16:
 544              		.cfi_def_cfa_register 7
 545 031a 7860     		str	r0, [r7, #4]
 261:../stm32f10x_gpio.c ****   return ((u16)GPIOx->IDR);
 546              		.loc 1 261 0
 547 031c 7B68     		ldr	r3, [r7, #4]
 548 031e 9B68     		ldr	r3, [r3, #8]
 549 0320 9BB2     		uxth	r3, r3
 262:../stm32f10x_gpio.c **** }
 550              		.loc 1 262 0
 551 0322 1846     		mov	r0, r3
 552 0324 07F10C07 		add	r7, r7, #12
 553 0328 BD46     		mov	sp, r7
 554 032a 80BC     		pop	{r7}
 555 032c 7047     		bx	lr
 556              		.cfi_endproc
 557              	.LFE5:
 559 032e 00BF     		.align	2
 560              		.global	GPIO_ReadOutputDataBit
 561              		.thumb
 562              		.thumb_func
 564              	GPIO_ReadOutputDataBit:
 565              	.LFB6:
 263:../stm32f10x_gpio.c **** 
 264:../stm32f10x_gpio.c **** /*******************************************************************************
 265:../stm32f10x_gpio.c **** * Function Name  : GPIO_ReadOutputDataBit
 266:../stm32f10x_gpio.c **** * Description    : Reads the specified output data port bit.
 267:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 268:../stm32f10x_gpio.c **** *                : - GPIO_Pin:  specifies the port bit to read.
 269:../stm32f10x_gpio.c **** *                    This parameter can be GPIO_Pin_x where x can be (0..15).
 270:../stm32f10x_gpio.c **** * Output         : None
 271:../stm32f10x_gpio.c **** * Return         : The output port pin value.
 272:../stm32f10x_gpio.c **** *******************************************************************************/
 273:../stm32f10x_gpio.c **** u8 GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 274:../stm32f10x_gpio.c **** {
 566              		.loc 1 274 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 16
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571 0330 80B4     		push	{r7}
 572              	.LCFI17:
 573              		.cfi_def_cfa_offset 4
 574              		.cfi_offset 7, -4
 575 0332 85B0     		sub	sp, sp, #20
 576              	.LCFI18:
 577              		.cfi_def_cfa_offset 24
 578 0334 00AF     		add	r7, sp, #0
 579              	.LCFI19:
 580              		.cfi_def_cfa_register 7
 581 0336 7860     		str	r0, [r7, #4]
 582 0338 0B46     		mov	r3, r1
 583 033a 7B80     		strh	r3, [r7, #2]	@ movhi
 275:../stm32f10x_gpio.c ****   u8 bitstatus = 0x00;
 584              		.loc 1 275 0
 585 033c 4FF00003 		mov	r3, #0
 586 0340 FB73     		strb	r3, [r7, #15]
 276:../stm32f10x_gpio.c **** 
 277:../stm32f10x_gpio.c ****   /* Check the parameters */
 278:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN(GPIO_Pin)); 
 279:../stm32f10x_gpio.c ****   
 280:../stm32f10x_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (u32)Bit_RESET)
 587              		.loc 1 280 0
 588 0342 7B68     		ldr	r3, [r7, #4]
 589 0344 DA68     		ldr	r2, [r3, #12]
 590 0346 7B88     		ldrh	r3, [r7, #2]
 591 0348 1340     		ands	r3, r3, r2
 592 034a 002B     		cmp	r3, #0
 593 034c 03D0     		beq	.L33
 281:../stm32f10x_gpio.c ****   {
 282:../stm32f10x_gpio.c ****     bitstatus = (u8)Bit_SET;
 594              		.loc 1 282 0
 595 034e 4FF00103 		mov	r3, #1
 596 0352 FB73     		strb	r3, [r7, #15]
 597 0354 02E0     		b	.L34
 598              	.L33:
 283:../stm32f10x_gpio.c ****   }
 284:../stm32f10x_gpio.c ****   else
 285:../stm32f10x_gpio.c ****   {
 286:../stm32f10x_gpio.c ****     bitstatus = (u8)Bit_RESET;
 599              		.loc 1 286 0
 600 0356 4FF00003 		mov	r3, #0
 601 035a FB73     		strb	r3, [r7, #15]
 602              	.L34:
 287:../stm32f10x_gpio.c ****   }
 288:../stm32f10x_gpio.c ****   return bitstatus;
 603              		.loc 1 288 0
 604 035c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 289:../stm32f10x_gpio.c **** }
 605              		.loc 1 289 0
 606 035e 1846     		mov	r0, r3
 607 0360 07F11407 		add	r7, r7, #20
 608 0364 BD46     		mov	sp, r7
 609 0366 80BC     		pop	{r7}
 610 0368 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE6:
 614 036a 00BF     		.align	2
 615              		.global	GPIO_ReadOutputData
 616              		.thumb
 617              		.thumb_func
 619              	GPIO_ReadOutputData:
 620              	.LFB7:
 290:../stm32f10x_gpio.c **** 
 291:../stm32f10x_gpio.c **** /*******************************************************************************
 292:../stm32f10x_gpio.c **** * Function Name  : GPIO_ReadOutputData
 293:../stm32f10x_gpio.c **** * Description    : Reads the specified GPIO output data port.
 294:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 295:../stm32f10x_gpio.c **** * Output         : None
 296:../stm32f10x_gpio.c **** * Return         : GPIO output data port value.
 297:../stm32f10x_gpio.c **** *******************************************************************************/
 298:../stm32f10x_gpio.c **** u16 GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 299:../stm32f10x_gpio.c **** {
 621              		.loc 1 299 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 036c 80B4     		push	{r7}
 627              	.LCFI20:
 628              		.cfi_def_cfa_offset 4
 629              		.cfi_offset 7, -4
 630 036e 83B0     		sub	sp, sp, #12
 631              	.LCFI21:
 632              		.cfi_def_cfa_offset 16
 633 0370 00AF     		add	r7, sp, #0
 634              	.LCFI22:
 635              		.cfi_def_cfa_register 7
 636 0372 7860     		str	r0, [r7, #4]
 300:../stm32f10x_gpio.c ****   return ((u16)GPIOx->ODR);
 637              		.loc 1 300 0
 638 0374 7B68     		ldr	r3, [r7, #4]
 639 0376 DB68     		ldr	r3, [r3, #12]
 640 0378 9BB2     		uxth	r3, r3
 301:../stm32f10x_gpio.c **** }
 641              		.loc 1 301 0
 642 037a 1846     		mov	r0, r3
 643 037c 07F10C07 		add	r7, r7, #12
 644 0380 BD46     		mov	sp, r7
 645 0382 80BC     		pop	{r7}
 646 0384 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE7:
 650 0386 00BF     		.align	2
 651              		.global	GPIO_WriteBit
 652              		.thumb
 653              		.thumb_func
 655              	GPIO_WriteBit:
 656              	.LFB8:
 302:../stm32f10x_gpio.c **** 
 303:../stm32f10x_gpio.c **** /*******************************************************************************
 304:../stm32f10x_gpio.c **** * Function Name  : GPIO_WriteBit
 305:../stm32f10x_gpio.c **** * Description    : Sets or clears the selected data port bit.
 306:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 307:../stm32f10x_gpio.c **** *                  - GPIO_Pin: specifies the port bit to be written.
 308:../stm32f10x_gpio.c **** *                    This parameter can be GPIO_Pin_x where x can be (0..15).
 309:../stm32f10x_gpio.c **** *                  - BitVal: specifies the value to be written to the selected bit.
 310:../stm32f10x_gpio.c **** *                    This parameter can be one of the BitAction enum values:
 311:../stm32f10x_gpio.c **** *                       - Bit_RESET: to clear the port pin
 312:../stm32f10x_gpio.c **** *                       - Bit_SET: to set the port pin
 313:../stm32f10x_gpio.c **** * Output         : None
 314:../stm32f10x_gpio.c **** * Return         : None
 315:../stm32f10x_gpio.c **** *******************************************************************************/
 316:../stm32f10x_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin, BitAction BitVal)
 317:../stm32f10x_gpio.c **** {
 657              		.loc 1 317 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0388 80B4     		push	{r7}
 663              	.LCFI23:
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 038a 83B0     		sub	sp, sp, #12
 667              	.LCFI24:
 668              		.cfi_def_cfa_offset 16
 669 038c 00AF     		add	r7, sp, #0
 670              	.LCFI25:
 671              		.cfi_def_cfa_register 7
 672 038e 7860     		str	r0, [r7, #4]
 673 0390 1346     		mov	r3, r2
 674 0392 0A46     		mov	r2, r1	@ movhi
 675 0394 7A80     		strh	r2, [r7, #2]	@ movhi
 676 0396 7B70     		strb	r3, [r7, #1]
 318:../stm32f10x_gpio.c ****   /* Check the parameters */
 319:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN(GPIO_Pin));
 320:../stm32f10x_gpio.c ****   assert(IS_GPIO_BIT_ACTION(BitVal)); 
 321:../stm32f10x_gpio.c ****   
 322:../stm32f10x_gpio.c ****   if (BitVal != Bit_RESET)
 677              		.loc 1 322 0
 678 0398 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 679 039a 002B     		cmp	r3, #0
 680 039c 03D0     		beq	.L39
 323:../stm32f10x_gpio.c ****   {
 324:../stm32f10x_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 681              		.loc 1 324 0
 682 039e 7A88     		ldrh	r2, [r7, #2]
 683 03a0 7B68     		ldr	r3, [r7, #4]
 684 03a2 1A61     		str	r2, [r3, #16]
 685 03a4 02E0     		b	.L38
 686              	.L39:
 325:../stm32f10x_gpio.c ****   }
 326:../stm32f10x_gpio.c ****   else
 327:../stm32f10x_gpio.c ****   {
 328:../stm32f10x_gpio.c ****     GPIOx->BRR = GPIO_Pin;
 687              		.loc 1 328 0
 688 03a6 7A88     		ldrh	r2, [r7, #2]
 689 03a8 7B68     		ldr	r3, [r7, #4]
 690 03aa 5A61     		str	r2, [r3, #20]
 691              	.L38:
 329:../stm32f10x_gpio.c ****   }
 330:../stm32f10x_gpio.c **** }
 692              		.loc 1 330 0
 693 03ac 07F10C07 		add	r7, r7, #12
 694 03b0 BD46     		mov	sp, r7
 695 03b2 80BC     		pop	{r7}
 696 03b4 7047     		bx	lr
 697              		.cfi_endproc
 698              	.LFE8:
 700 03b6 00BF     		.align	2
 701              		.global	GPIO_Write
 702              		.thumb
 703              		.thumb_func
 705              	GPIO_Write:
 706              	.LFB9:
 331:../stm32f10x_gpio.c **** 
 332:../stm32f10x_gpio.c **** /*******************************************************************************
 333:../stm32f10x_gpio.c **** * Function Name  : GPIO_Write
 334:../stm32f10x_gpio.c **** * Description    : Writes data to the specified GPIO data port.
 335:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 336:../stm32f10x_gpio.c **** *                  - PortVal: specifies the value to be written to the port output
 337:../stm32f10x_gpio.c **** *                    data register.
 338:../stm32f10x_gpio.c **** * Output         : None
 339:../stm32f10x_gpio.c **** * Return         : None
 340:../stm32f10x_gpio.c **** *******************************************************************************/
 341:../stm32f10x_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, u16 PortVal)
 342:../stm32f10x_gpio.c **** {
 707              		.loc 1 342 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 8
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712 03b8 80B4     		push	{r7}
 713              	.LCFI26:
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 7, -4
 716 03ba 83B0     		sub	sp, sp, #12
 717              	.LCFI27:
 718              		.cfi_def_cfa_offset 16
 719 03bc 00AF     		add	r7, sp, #0
 720              	.LCFI28:
 721              		.cfi_def_cfa_register 7
 722 03be 7860     		str	r0, [r7, #4]
 723 03c0 0B46     		mov	r3, r1
 724 03c2 7B80     		strh	r3, [r7, #2]	@ movhi
 343:../stm32f10x_gpio.c ****   GPIOx->ODR = PortVal;
 725              		.loc 1 343 0
 726 03c4 7A88     		ldrh	r2, [r7, #2]
 727 03c6 7B68     		ldr	r3, [r7, #4]
 728 03c8 DA60     		str	r2, [r3, #12]
 344:../stm32f10x_gpio.c **** }
 729              		.loc 1 344 0
 730 03ca 07F10C07 		add	r7, r7, #12
 731 03ce BD46     		mov	sp, r7
 732 03d0 80BC     		pop	{r7}
 733 03d2 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE9:
 737              		.align	2
 738              		.global	GPIO_PinLockConfig
 739              		.thumb
 740              		.thumb_func
 742              	GPIO_PinLockConfig:
 743              	.LFB10:
 345:../stm32f10x_gpio.c **** 
 346:../stm32f10x_gpio.c **** /*******************************************************************************
 347:../stm32f10x_gpio.c **** * Function Name  : GPIO_PinLockConfig
 348:../stm32f10x_gpio.c **** * Description    : Locks GPIO Pins configuration registers.
 349:../stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..E) to select the GPIO peripheral.
 350:../stm32f10x_gpio.c **** *                  - GPIO_Pin: specifies the port bit to be written.
 351:../stm32f10x_gpio.c **** *                    This parameter can be GPIO_Pin_x where x can be (0..15).
 352:../stm32f10x_gpio.c **** * Output         : None
 353:../stm32f10x_gpio.c **** * Return         : None
 354:../stm32f10x_gpio.c **** *******************************************************************************/
 355:../stm32f10x_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 356:../stm32f10x_gpio.c **** {
 744              		.loc 1 356 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 16
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749 03d4 80B4     		push	{r7}
 750              	.LCFI29:
 751              		.cfi_def_cfa_offset 4
 752              		.cfi_offset 7, -4
 753 03d6 85B0     		sub	sp, sp, #20
 754              	.LCFI30:
 755              		.cfi_def_cfa_offset 24
 756 03d8 00AF     		add	r7, sp, #0
 757              	.LCFI31:
 758              		.cfi_def_cfa_register 7
 759 03da 7860     		str	r0, [r7, #4]
 760 03dc 0B46     		mov	r3, r1
 761 03de 7B80     		strh	r3, [r7, #2]	@ movhi
 357:../stm32f10x_gpio.c ****   u32 tmp = 0x00010000;
 762              		.loc 1 357 0
 763 03e0 4FF48033 		mov	r3, #65536
 764 03e4 FB60     		str	r3, [r7, #12]
 358:../stm32f10x_gpio.c ****   
 359:../stm32f10x_gpio.c ****   /* Check the parameters */
 360:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN(GPIO_Pin));
 361:../stm32f10x_gpio.c ****   
 362:../stm32f10x_gpio.c ****   tmp |= GPIO_Pin;
 765              		.loc 1 362 0
 766 03e6 7B88     		ldrh	r3, [r7, #2]
 767 03e8 FA68     		ldr	r2, [r7, #12]
 768 03ea 1343     		orrs	r3, r3, r2
 769 03ec FB60     		str	r3, [r7, #12]
 363:../stm32f10x_gpio.c ****   /* Set LCKK bit */
 364:../stm32f10x_gpio.c ****   GPIOx->LCKR = tmp;
 770              		.loc 1 364 0
 771 03ee 7B68     		ldr	r3, [r7, #4]
 772 03f0 FA68     		ldr	r2, [r7, #12]
 773 03f2 9A61     		str	r2, [r3, #24]
 365:../stm32f10x_gpio.c ****   /* Reset LCKK bit */
 366:../stm32f10x_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 774              		.loc 1 366 0
 775 03f4 7A88     		ldrh	r2, [r7, #2]
 776 03f6 7B68     		ldr	r3, [r7, #4]
 777 03f8 9A61     		str	r2, [r3, #24]
 367:../stm32f10x_gpio.c ****   /* Set LCKK bit */
 368:../stm32f10x_gpio.c ****   GPIOx->LCKR = tmp;
 778              		.loc 1 368 0
 779 03fa 7B68     		ldr	r3, [r7, #4]
 780 03fc FA68     		ldr	r2, [r7, #12]
 781 03fe 9A61     		str	r2, [r3, #24]
 369:../stm32f10x_gpio.c ****   /* Read LCKK bit*/
 370:../stm32f10x_gpio.c ****   tmp = GPIOx->LCKR;
 782              		.loc 1 370 0
 783 0400 7B68     		ldr	r3, [r7, #4]
 784 0402 9B69     		ldr	r3, [r3, #24]
 785 0404 FB60     		str	r3, [r7, #12]
 371:../stm32f10x_gpio.c ****   /* Read LCKK bit*/
 372:../stm32f10x_gpio.c ****   tmp = GPIOx->LCKR;
 786              		.loc 1 372 0
 787 0406 7B68     		ldr	r3, [r7, #4]
 788 0408 9B69     		ldr	r3, [r3, #24]
 789 040a FB60     		str	r3, [r7, #12]
 373:../stm32f10x_gpio.c **** }
 790              		.loc 1 373 0
 791 040c 07F11407 		add	r7, r7, #20
 792 0410 BD46     		mov	sp, r7
 793 0412 80BC     		pop	{r7}
 794 0414 7047     		bx	lr
 795              		.cfi_endproc
 796              	.LFE10:
 798 0416 00BF     		.align	2
 799              		.global	GPIO_EventOutputConfig
 800              		.thumb
 801              		.thumb_func
 803              	GPIO_EventOutputConfig:
 804              	.LFB11:
 374:../stm32f10x_gpio.c **** 
 375:../stm32f10x_gpio.c **** /*******************************************************************************
 376:../stm32f10x_gpio.c **** * Function Name  : GPIO_EventOutputConfig
 377:../stm32f10x_gpio.c **** * Description    : Selects the GPIO pin used as Event output.
 378:../stm32f10x_gpio.c **** * Input          : - GPIO_PortSource: selects the GPIO port to be used as source
 379:../stm32f10x_gpio.c **** *                    for Event output.
 380:../stm32f10x_gpio.c **** *                    This parameter can be GPIO_PortSourceGPIOx where x can be
 381:../stm32f10x_gpio.c **** *                    (A..E).
 382:../stm32f10x_gpio.c **** *                  - GPIO_PinSource: specifies the pin for the Event output.
 383:../stm32f10x_gpio.c **** *                    This parameter can be GPIO_PinSourcex where x can be (0..15).
 384:../stm32f10x_gpio.c **** * Output         : None
 385:../stm32f10x_gpio.c **** * Return         : None
 386:../stm32f10x_gpio.c **** *******************************************************************************/
 387:../stm32f10x_gpio.c **** void GPIO_EventOutputConfig(u8 GPIO_PortSource, u8 GPIO_PinSource)
 388:../stm32f10x_gpio.c **** {
 805              		.loc 1 388 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 16
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0418 80B4     		push	{r7}
 811              	.LCFI32:
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 041a 85B0     		sub	sp, sp, #20
 815              	.LCFI33:
 816              		.cfi_def_cfa_offset 24
 817 041c 00AF     		add	r7, sp, #0
 818              	.LCFI34:
 819              		.cfi_def_cfa_register 7
 820 041e 0246     		mov	r2, r0
 821 0420 0B46     		mov	r3, r1
 822 0422 FA71     		strb	r2, [r7, #7]
 823 0424 BB71     		strb	r3, [r7, #6]
 389:../stm32f10x_gpio.c ****   u32 tmpreg = 0x00;
 824              		.loc 1 389 0
 825 0426 4FF00003 		mov	r3, #0
 826 042a FB60     		str	r3, [r7, #12]
 390:../stm32f10x_gpio.c **** 
 391:../stm32f10x_gpio.c ****   /* Check the parameters */
 392:../stm32f10x_gpio.c ****   assert(IS_GPIO_PORT_SOURCE(GPIO_PortSource));
 393:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 394:../stm32f10x_gpio.c ****     
 395:../stm32f10x_gpio.c ****   tmpreg = AFIO->EVCR;
 827              		.loc 1 395 0
 828 042c 0C4B     		ldr	r3, .L44
 829 042e 1B68     		ldr	r3, [r3, #0]
 830 0430 FB60     		str	r3, [r7, #12]
 396:../stm32f10x_gpio.c ****   /* Clear the PORT[6:4] and PIN[3:0] bits */
 397:../stm32f10x_gpio.c ****   tmpreg &= EVCR_PORTPINCONFIG_MASK;
 831              		.loc 1 397 0
 832 0432 FA68     		ldr	r2, [r7, #12]
 833 0434 4FF68073 		movw	r3, #65408
 834 0438 1340     		ands	r3, r3, r2
 835 043a FB60     		str	r3, [r7, #12]
 398:../stm32f10x_gpio.c ****   tmpreg |= (u32)GPIO_PortSource << 0x04;
 836              		.loc 1 398 0
 837 043c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838 043e 4FEA0313 		lsl	r3, r3, #4
 839 0442 FA68     		ldr	r2, [r7, #12]
 840 0444 1343     		orrs	r3, r3, r2
 841 0446 FB60     		str	r3, [r7, #12]
 399:../stm32f10x_gpio.c ****   tmpreg |= GPIO_PinSource;
 842              		.loc 1 399 0
 843 0448 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 844 044a FA68     		ldr	r2, [r7, #12]
 845 044c 1343     		orrs	r3, r3, r2
 846 044e FB60     		str	r3, [r7, #12]
 400:../stm32f10x_gpio.c **** 
 401:../stm32f10x_gpio.c ****   AFIO->EVCR = tmpreg;
 847              		.loc 1 401 0
 848 0450 034B     		ldr	r3, .L44
 849 0452 FA68     		ldr	r2, [r7, #12]
 850 0454 1A60     		str	r2, [r3, #0]
 402:../stm32f10x_gpio.c **** }
 851              		.loc 1 402 0
 852 0456 07F11407 		add	r7, r7, #20
 853 045a BD46     		mov	sp, r7
 854 045c 80BC     		pop	{r7}
 855 045e 7047     		bx	lr
 856              	.L45:
 857              		.align	2
 858              	.L44:
 859 0460 00000140 		.word	1073807360
 860              		.cfi_endproc
 861              	.LFE11:
 863              		.align	2
 864              		.global	GPIO_EventOutputCmd
 865              		.thumb
 866              		.thumb_func
 868              	GPIO_EventOutputCmd:
 869              	.LFB12:
 403:../stm32f10x_gpio.c **** 
 404:../stm32f10x_gpio.c **** /*******************************************************************************
 405:../stm32f10x_gpio.c **** * Function Name  : GPIO_EventOutputCmd
 406:../stm32f10x_gpio.c **** * Description    : Enables or disables the Event Output.
 407:../stm32f10x_gpio.c **** * Input          : - NewState: new state of the Event output.
 408:../stm32f10x_gpio.c **** *                    This parameter can be: ENABLE or DISABLE.
 409:../stm32f10x_gpio.c **** * Output         : None
 410:../stm32f10x_gpio.c **** * Return         : None
 411:../stm32f10x_gpio.c **** *******************************************************************************/
 412:../stm32f10x_gpio.c **** void GPIO_EventOutputCmd(FunctionalState NewState)
 413:../stm32f10x_gpio.c **** {
 870              		.loc 1 413 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 8
 873              		@ frame_needed = 1, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875 0464 80B4     		push	{r7}
 876              	.LCFI35:
 877              		.cfi_def_cfa_offset 4
 878              		.cfi_offset 7, -4
 879 0466 83B0     		sub	sp, sp, #12
 880              	.LCFI36:
 881              		.cfi_def_cfa_offset 16
 882 0468 00AF     		add	r7, sp, #0
 883              	.LCFI37:
 884              		.cfi_def_cfa_register 7
 885 046a 0346     		mov	r3, r0
 886 046c FB71     		strb	r3, [r7, #7]
 414:../stm32f10x_gpio.c ****   /* Check the parameters */
 415:../stm32f10x_gpio.c ****   assert(IS_FUNCTIONAL_STATE(NewState));
 416:../stm32f10x_gpio.c ****   
 417:../stm32f10x_gpio.c ****   *(vu32 *) EVCR_EVOE_BB = (u32)NewState;
 887              		.loc 1 417 0
 888 046e 044B     		ldr	r3, .L47
 889 0470 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 890 0472 1A60     		str	r2, [r3, #0]
 418:../stm32f10x_gpio.c **** }
 891              		.loc 1 418 0
 892 0474 07F10C07 		add	r7, r7, #12
 893 0478 BD46     		mov	sp, r7
 894 047a 80BC     		pop	{r7}
 895 047c 7047     		bx	lr
 896              	.L48:
 897 047e 00BF     		.align	2
 898              	.L47:
 899 0480 1C002042 		.word	1109393436
 900              		.cfi_endproc
 901              	.LFE12:
 903              		.align	2
 904              		.global	GPIO_PinRemapConfig
 905              		.thumb
 906              		.thumb_func
 908              	GPIO_PinRemapConfig:
 909              	.LFB13:
 419:../stm32f10x_gpio.c **** 
 420:../stm32f10x_gpio.c **** /*******************************************************************************
 421:../stm32f10x_gpio.c **** * Function Name  : GPIO_PinRemapConfig
 422:../stm32f10x_gpio.c **** * Description    : Changes the mapping of the specified pin.
 423:../stm32f10x_gpio.c **** * Input          : - GPIO_Remap: selects the pin to remap.
 424:../stm32f10x_gpio.c **** *                    This parameter can be one of the following values:
 425:../stm32f10x_gpio.c **** *                       - GPIO_Remap_SPI1
 426:../stm32f10x_gpio.c **** *                       - GPIO_Remap_I2C1
 427:../stm32f10x_gpio.c **** *                       - GPIO_Remap_USART1
 428:../stm32f10x_gpio.c **** *                       - GPIO_Remap_USART2
 429:../stm32f10x_gpio.c **** *                       - GPIO_PartialRemap_USART3
 430:../stm32f10x_gpio.c **** *                       - GPIO_FullRemap_USART3
 431:../stm32f10x_gpio.c **** *                       - GPIO_PartialRemap_TIM1
 432:../stm32f10x_gpio.c **** *                       - GPIO_FullRemap_TIM1
 433:../stm32f10x_gpio.c **** *                       - GPIO_PartialRemap1_TIM2
 434:../stm32f10x_gpio.c **** *                       - GPIO_PartialRemap2_TIM2
 435:../stm32f10x_gpio.c **** *                       - GPIO_FullRemap_TIM2
 436:../stm32f10x_gpio.c **** *                       - GPIO_PartialRemap_TIM3
 437:../stm32f10x_gpio.c **** *                       - GPIO_FullRemap_TIM3
 438:../stm32f10x_gpio.c **** *                       - GPIO_Remap_TIM4
 439:../stm32f10x_gpio.c **** *                       - GPIO_Remap1_CAN
 440:../stm32f10x_gpio.c **** *                       - GPIO_Remap2_CAN
 441:../stm32f10x_gpio.c **** *                       - GPIO_Remap_PD01
 442:../stm32f10x_gpio.c **** *                       - GPIO_Remap_SWJ_NoJTRST
 443:../stm32f10x_gpio.c **** *                       - GPIO_Remap_SWJ_JTAGDisable
 444:../stm32f10x_gpio.c **** *                       - GPIO_Remap_SWJ_Disable
 445:../stm32f10x_gpio.c **** *                  - NewState: new state of the port pin remapping.
 446:../stm32f10x_gpio.c **** *                    This parameter can be: ENABLE or DISABLE.
 447:../stm32f10x_gpio.c **** * Output         : None
 448:../stm32f10x_gpio.c **** * Return         : None
 449:../stm32f10x_gpio.c **** *******************************************************************************/
 450:../stm32f10x_gpio.c **** void GPIO_PinRemapConfig(u32 GPIO_Remap, FunctionalState NewState)
 451:../stm32f10x_gpio.c **** {
 910              		.loc 1 451 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 24
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0484 80B4     		push	{r7}
 916              	.LCFI38:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0486 87B0     		sub	sp, sp, #28
 920              	.LCFI39:
 921              		.cfi_def_cfa_offset 32
 922 0488 00AF     		add	r7, sp, #0
 923              	.LCFI40:
 924              		.cfi_def_cfa_register 7
 925 048a 7860     		str	r0, [r7, #4]
 926 048c 0B46     		mov	r3, r1
 927 048e FB70     		strb	r3, [r7, #3]
 452:../stm32f10x_gpio.c ****   u32 tmp = 0x00, tmp1 = 0x00, tmpreg = 0x00, tmpmask = 0x00;
 928              		.loc 1 452 0
 929 0490 4FF00003 		mov	r3, #0
 930 0494 3B61     		str	r3, [r7, #16]
 931 0496 4FF00003 		mov	r3, #0
 932 049a FB60     		str	r3, [r7, #12]
 933 049c 4FF00003 		mov	r3, #0
 934 04a0 7B61     		str	r3, [r7, #20]
 935 04a2 4FF00003 		mov	r3, #0
 936 04a6 BB60     		str	r3, [r7, #8]
 453:../stm32f10x_gpio.c **** 
 454:../stm32f10x_gpio.c ****   /* Check the parameters */
 455:../stm32f10x_gpio.c ****   assert(IS_GPIO_REMAP(GPIO_Remap));
 456:../stm32f10x_gpio.c ****   assert(IS_FUNCTIONAL_STATE(NewState));  
 457:../stm32f10x_gpio.c ****   
 458:../stm32f10x_gpio.c ****   tmpreg = AFIO->MAPR;
 937              		.loc 1 458 0
 938 04a8 254B     		ldr	r3, .L55
 939 04aa 5B68     		ldr	r3, [r3, #4]
 940 04ac 7B61     		str	r3, [r7, #20]
 459:../stm32f10x_gpio.c **** 
 460:../stm32f10x_gpio.c ****   tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
 941              		.loc 1 460 0
 942 04ae 7B68     		ldr	r3, [r7, #4]
 943 04b0 03F47023 		and	r3, r3, #983040
 944 04b4 4FEA1343 		lsr	r3, r3, #16
 945 04b8 BB60     		str	r3, [r7, #8]
 461:../stm32f10x_gpio.c ****   tmp = GPIO_Remap & LSB_MASK;
 946              		.loc 1 461 0
 947 04ba 7B68     		ldr	r3, [r7, #4]
 948 04bc 4FEA0343 		lsl	r3, r3, #16
 949 04c0 4FEA1343 		lsr	r3, r3, #16
 950 04c4 3B61     		str	r3, [r7, #16]
 462:../stm32f10x_gpio.c **** 
 463:../stm32f10x_gpio.c ****   if ((GPIO_Remap & DBGAFR_LOCATION_MASK) == DBGAFR_LOCATION_MASK)
 951              		.loc 1 463 0
 952 04c6 7B68     		ldr	r3, [r7, #4]
 953 04c8 03F40013 		and	r3, r3, #2097152
 954 04cc 002B     		cmp	r3, #0
 955 04ce 04D0     		beq	.L50
 464:../stm32f10x_gpio.c ****   {
 465:../stm32f10x_gpio.c ****     tmpreg &= DBGAFR_SWJCFG_MASK;
 956              		.loc 1 465 0
 957 04d0 7B69     		ldr	r3, [r7, #20]
 958 04d2 23F0E063 		bic	r3, r3, #117440512
 959 04d6 7B61     		str	r3, [r7, #20]
 960 04d8 17E0     		b	.L51
 961              	.L50:
 466:../stm32f10x_gpio.c ****   }
 467:../stm32f10x_gpio.c ****   else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
 962              		.loc 1 467 0
 963 04da 7B68     		ldr	r3, [r7, #4]
 964 04dc 03F48013 		and	r3, r3, #1048576
 965 04e0 002B     		cmp	r3, #0
 966 04e2 0CD0     		beq	.L52
 468:../stm32f10x_gpio.c ****   {
 469:../stm32f10x_gpio.c ****     tmp1 = ((u32)0x03) << tmpmask;
 967              		.loc 1 469 0
 968 04e4 BB68     		ldr	r3, [r7, #8]
 969 04e6 4FF00302 		mov	r2, #3
 970 04ea 02FA03F3 		lsl	r3, r2, r3
 971 04ee FB60     		str	r3, [r7, #12]
 470:../stm32f10x_gpio.c ****     tmpreg &= ~tmp1;
 972              		.loc 1 470 0
 973 04f0 FB68     		ldr	r3, [r7, #12]
 974 04f2 6FEA0303 		mvn	r3, r3
 975 04f6 7A69     		ldr	r2, [r7, #20]
 976 04f8 1340     		ands	r3, r3, r2
 977 04fa 7B61     		str	r3, [r7, #20]
 978 04fc 05E0     		b	.L51
 979              	.L52:
 471:../stm32f10x_gpio.c ****   }
 472:../stm32f10x_gpio.c ****   else
 473:../stm32f10x_gpio.c ****   {
 474:../stm32f10x_gpio.c ****     tmpreg &= ~tmp;
 980              		.loc 1 474 0
 981 04fe 3B69     		ldr	r3, [r7, #16]
 982 0500 6FEA0303 		mvn	r3, r3
 983 0504 7A69     		ldr	r2, [r7, #20]
 984 0506 1340     		ands	r3, r3, r2
 985 0508 7B61     		str	r3, [r7, #20]
 986              	.L51:
 475:../stm32f10x_gpio.c ****   }
 476:../stm32f10x_gpio.c **** 
 477:../stm32f10x_gpio.c ****   if (NewState != DISABLE)
 987              		.loc 1 477 0
 988 050a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 989 050c 002B     		cmp	r3, #0
 990 050e 0FD0     		beq	.L53
 478:../stm32f10x_gpio.c ****   {
 479:../stm32f10x_gpio.c ****     if ((GPIO_Remap & DBGAFR_LOCATION_MASK) == DBGAFR_LOCATION_MASK)
 991              		.loc 1 479 0
 992 0510 7B68     		ldr	r3, [r7, #4]
 993 0512 03F40013 		and	r3, r3, #2097152
 994 0516 002B     		cmp	r3, #0
 995 0518 06D0     		beq	.L54
 480:../stm32f10x_gpio.c ****     {
 481:../stm32f10x_gpio.c ****       tmpreg |= (tmp << 0x10);
 996              		.loc 1 481 0
 997 051a 3B69     		ldr	r3, [r7, #16]
 998 051c 4FEA0343 		lsl	r3, r3, #16
 999 0520 7A69     		ldr	r2, [r7, #20]
 1000 0522 1343     		orrs	r3, r3, r2
 1001 0524 7B61     		str	r3, [r7, #20]
 1002 0526 03E0     		b	.L53
 1003              	.L54:
 482:../stm32f10x_gpio.c ****     }
 483:../stm32f10x_gpio.c ****     else
 484:../stm32f10x_gpio.c ****     {
 485:../stm32f10x_gpio.c ****       tmpreg |= tmp;
 1004              		.loc 1 485 0
 1005 0528 7A69     		ldr	r2, [r7, #20]
 1006 052a 3B69     		ldr	r3, [r7, #16]
 1007 052c 1343     		orrs	r3, r3, r2
 1008 052e 7B61     		str	r3, [r7, #20]
 1009              	.L53:
 486:../stm32f10x_gpio.c ****     }
 487:../stm32f10x_gpio.c ****   }
 488:../stm32f10x_gpio.c ****   AFIO->MAPR = tmpreg;
 1010              		.loc 1 488 0
 1011 0530 034B     		ldr	r3, .L55
 1012 0532 7A69     		ldr	r2, [r7, #20]
 1013 0534 5A60     		str	r2, [r3, #4]
 489:../stm32f10x_gpio.c **** }
 1014              		.loc 1 489 0
 1015 0536 07F11C07 		add	r7, r7, #28
 1016 053a BD46     		mov	sp, r7
 1017 053c 80BC     		pop	{r7}
 1018 053e 7047     		bx	lr
 1019              	.L56:
 1020              		.align	2
 1021              	.L55:
 1022 0540 00000140 		.word	1073807360
 1023              		.cfi_endproc
 1024              	.LFE13:
 1026              		.align	2
 1027              		.global	GPIO_EXTILineConfig
 1028              		.thumb
 1029              		.thumb_func
 1031              	GPIO_EXTILineConfig:
 1032              	.LFB14:
 490:../stm32f10x_gpio.c **** 
 491:../stm32f10x_gpio.c **** /*******************************************************************************
 492:../stm32f10x_gpio.c **** * Function Name  : GPIO_EXTILineConfig
 493:../stm32f10x_gpio.c **** * Description    : Selects the GPIO pin used as EXTI Line.
 494:../stm32f10x_gpio.c **** * Input          : - GPIO_PortSource: selects the GPIO port to be used as
 495:../stm32f10x_gpio.c **** *                    source for EXTI lines.
 496:../stm32f10x_gpio.c **** *                  - GPIO_PinSource: specifies the EXTI line to be configured.
 497:../stm32f10x_gpio.c **** *                   This parameter can be GPIO_PinSourcex where x can be (0..15).
 498:../stm32f10x_gpio.c **** * Output         : None
 499:../stm32f10x_gpio.c **** * Return         : None
 500:../stm32f10x_gpio.c **** *******************************************************************************/
 501:../stm32f10x_gpio.c **** void GPIO_EXTILineConfig(u8 GPIO_PortSource, u8 GPIO_PinSource)
 502:../stm32f10x_gpio.c **** {
 1033              		.loc 1 502 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 16
 1036              		@ frame_needed = 1, uses_anonymous_args = 0
 1037              		@ link register save eliminated.
 1038 0544 90B4     		push	{r4, r7}
 1039              	.LCFI41:
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 4, -8
 1042              		.cfi_offset 7, -4
 1043 0546 84B0     		sub	sp, sp, #16
 1044              	.LCFI42:
 1045              		.cfi_def_cfa_offset 24
 1046 0548 00AF     		add	r7, sp, #0
 1047              	.LCFI43:
 1048              		.cfi_def_cfa_register 7
 1049 054a 0246     		mov	r2, r0
 1050 054c 0B46     		mov	r3, r1
 1051 054e FA71     		strb	r2, [r7, #7]
 1052 0550 BB71     		strb	r3, [r7, #6]
 503:../stm32f10x_gpio.c ****   u32 tmp = 0x00;
 1053              		.loc 1 503 0
 1054 0552 4FF00003 		mov	r3, #0
 1055 0556 FB60     		str	r3, [r7, #12]
 504:../stm32f10x_gpio.c **** 
 505:../stm32f10x_gpio.c ****   /* Check the parameters */
 506:../stm32f10x_gpio.c ****   assert(IS_GPIO_PORT_SOURCE(GPIO_PortSource));
 507:../stm32f10x_gpio.c ****   assert(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 508:../stm32f10x_gpio.c ****   
 509:../stm32f10x_gpio.c ****   tmp = ((u32)0x0F) << (0x04 * (GPIO_PinSource & (u8)0x03));
 1056              		.loc 1 509 0
 1057 0558 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1058 055a 03F00303 		and	r3, r3, #3
 1059 055e 4FEA8303 		lsl	r3, r3, #2
 1060 0562 4FF00F02 		mov	r2, #15
 1061 0566 02FA03F3 		lsl	r3, r2, r3
 1062 056a FB60     		str	r3, [r7, #12]
 510:../stm32f10x_gpio.c **** 
 511:../stm32f10x_gpio.c ****   AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
 1063              		.loc 1 511 0
 1064 056c 1A4B     		ldr	r3, .L58
 1065 056e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1066 0570 4FEA9202 		lsr	r2, r2, #2
 1067 0574 D2B2     		uxtb	r2, r2
 1068 0576 1849     		ldr	r1, .L58
 1069 0578 B879     		ldrb	r0, [r7, #6]	@ zero_extendqisi2
 1070 057a 4FEA9000 		lsr	r0, r0, #2
 1071 057e C0B2     		uxtb	r0, r0
 1072 0580 00F10200 		add	r0, r0, #2
 1073 0584 51F82000 		ldr	r0, [r1, r0, lsl #2]
 1074 0588 F968     		ldr	r1, [r7, #12]
 1075 058a 6FEA0101 		mvn	r1, r1
 1076 058e 0140     		ands	r1, r1, r0
 1077 0590 02F10202 		add	r2, r2, #2
 1078 0594 43F82210 		str	r1, [r3, r2, lsl #2]
 512:../stm32f10x_gpio.c ****   AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((u32)GPIO_PortSource) << (0x04 * (GPIO_PinSource & (u8)
 1079              		.loc 1 512 0
 1080 0598 0F4B     		ldr	r3, .L58
 1081 059a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1082 059c 4FEA9202 		lsr	r2, r2, #2
 1083 05a0 D2B2     		uxtb	r2, r2
 1084 05a2 0D49     		ldr	r1, .L58
 1085 05a4 B879     		ldrb	r0, [r7, #6]	@ zero_extendqisi2
 1086 05a6 4FEA9000 		lsr	r0, r0, #2
 1087 05aa C0B2     		uxtb	r0, r0
 1088 05ac 00F10200 		add	r0, r0, #2
 1089 05b0 51F82000 		ldr	r0, [r1, r0, lsl #2]
 1090 05b4 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1091 05b6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 1092 05b8 01F00301 		and	r1, r1, #3
 1093 05bc 4FEA8101 		lsl	r1, r1, #2
 1094 05c0 04FA01F1 		lsl	r1, r4, r1
 1095 05c4 0143     		orrs	r1, r1, r0
 1096 05c6 02F10202 		add	r2, r2, #2
 1097 05ca 43F82210 		str	r1, [r3, r2, lsl #2]
 513:../stm32f10x_gpio.c **** }
 1098              		.loc 1 513 0
 1099 05ce 07F11007 		add	r7, r7, #16
 1100 05d2 BD46     		mov	sp, r7
 1101 05d4 90BC     		pop	{r4, r7}
 1102 05d6 7047     		bx	lr
 1103              	.L59:
 1104              		.align	2
 1105              	.L58:
 1106 05d8 00000140 		.word	1073807360
 1107              		.cfi_endproc
 1108              	.LFE14:
 1110              	.Letext0:
 1111              		.file 2 "../stm32f10x_type.h"
 1112              		.file 3 "../stm32f10x_map.h"
 1113              		.file 4 "../stm32f10x_gpio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_gpio.c
     /tmp/ccruVXCg.s:18     .text:00000000 $t
     /tmp/ccruVXCg.s:23     .text:00000000 GPIO_DeInit
     /tmp/ccruVXCg.s:132    .text:000000c4 $d
     /tmp/ccruVXCg.s:140    .text:000000d8 $t
     /tmp/ccruVXCg.s:145    .text:000000d8 GPIO_AFIODeInit
     /tmp/ccruVXCg.s:177    .text:000000f8 GPIO_Init
     /tmp/ccruVXCg.s:430    .text:000002ac GPIO_StructInit
     /tmp/ccruVXCg.s:473    .text:000002d8 GPIO_ReadInputDataBit
     /tmp/ccruVXCg.s:528    .text:00000314 GPIO_ReadInputData
     /tmp/ccruVXCg.s:564    .text:00000330 GPIO_ReadOutputDataBit
     /tmp/ccruVXCg.s:619    .text:0000036c GPIO_ReadOutputData
     /tmp/ccruVXCg.s:655    .text:00000388 GPIO_WriteBit
     /tmp/ccruVXCg.s:705    .text:000003b8 GPIO_Write
     /tmp/ccruVXCg.s:742    .text:000003d4 GPIO_PinLockConfig
     /tmp/ccruVXCg.s:803    .text:00000418 GPIO_EventOutputConfig
     /tmp/ccruVXCg.s:859    .text:00000460 $d
     /tmp/ccruVXCg.s:863    .text:00000464 $t
     /tmp/ccruVXCg.s:868    .text:00000464 GPIO_EventOutputCmd
     /tmp/ccruVXCg.s:899    .text:00000480 $d
     /tmp/ccruVXCg.s:903    .text:00000484 $t
     /tmp/ccruVXCg.s:908    .text:00000484 GPIO_PinRemapConfig
     /tmp/ccruVXCg.s:1022   .text:00000540 $d
     /tmp/ccruVXCg.s:1026   .text:00000544 $t
     /tmp/ccruVXCg.s:1031   .text:00000544 GPIO_EXTILineConfig
     /tmp/ccruVXCg.s:1106   .text:000005d8 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.1cb18d77ce4a2b8461ab48417a33beea
                           .group:00000000 wm4.stm32f10x_map.h.23.e32c5bc169f5bca8263a343c3fb0f58f
                           .group:00000000 wm4.stm32f10x_conf.h.21.0d3cf2f2cbb2da4df12e2aab87a9dc0c
                           .group:00000000 wm4.stm32f10x_type.h.23.e380307898cc9efdccdef16060239333
                           .group:00000000 wm4.stm32f10x_map.h.199.b8a24be375f3263e6b0ddcd78767d1fd
                           .group:00000000 wm4.stm32f10x_gpio.h.37.2a1576eabbacc2771137820dbcc9cdc6
                           .group:00000000 wm4.stm32f10x_rcc.h.23.9c9056daedc5033ab222aac206d83565

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
